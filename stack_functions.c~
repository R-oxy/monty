#include "monty.h"

/**
 * push - Pushes an element to the stack.
 * @stack: Double pointer to the head of the stack.
 * @line_number: The line number in the Monty bytecodes file.
 * @value: The value to be pushed.
 */
void push(stack_t **stack, unsigned int line_number, int value)
{
    stack_t *new_node = malloc(sizeof(stack_t));
    if (new_node == NULL)
    {
        fprintf(stderr, "Error: malloc failed\n");
        exit(EXIT_FAILURE);
    }

    new_node->n = value;
    new_node->prev = NULL;

    if (*stack == NULL)
    {
        new_node->next = NULL;
    }
    else
    {
        new_node->next = *stack;
        (*stack)->prev = new_node;
    }

    *stack = new_node;
}

/**
 * pop - Removes the top element of the stack.
 * @stack: Double pointer to the head of the stack.
 * @line_number: Line number being executed from the Monty file.
 */
void pop(stack_t **stack, unsigned int line_number)
{
	stack_t *temp;

	if (*stack == NULL)
	{
		fprintf(stderr, "L%u: can't pop an empty stack\n", line_number);
		exit(EXIT_FAILURE);
	}

	temp = *stack;
	*stack = (*stack)->next;
	if (*stack != NULL)
		(*stack)->prev = NULL;
	free(temp);
}

/**
 * swap - Swaps the top two elements of the stack.
 * @stack: Double pointer to the head of the stack.
 * @line_number: Line number being executed from the Monty file.
 */
void swap(stack_t **stack, unsigned int line_number)
{
        stack_t *top, *next;

        if (!stack || !*stack || !(*stack)->next)
        {
                fprintf(stderr, "L%u: can't swap, stack too short\n", line_number);
                free_stack(*stack);
                exit(EXIT_FAILURE);
        }

        top = *stack;
        next = top->next;

        top->prev = next;
        top->next = next->next;

        if (next->next)
                next->next->prev = top;

        next->prev = NULL;
        next->next = top;
        *stack = next;
}

/**
 * op_nop - Doesn't do anything
 * @stack: Double pointer to the head of the stack
 * @line_number: Current line number in the Monty file
 *
 * Description: This opcode doesn't perform any operation.
 */
void op_nop(stack_t **stack, unsigned int line_number)
{
        (void)stack;
        (void)line_number;
}
